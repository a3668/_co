// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // 修正 Address decoding
    DMux8Way(in=load, sel=address, 
             a=load0, b=load1, c=load2, d=load3, 
             e=load4, f=load5, g=load6, h=load7);

    // Registers for each memory location
    Register(in=in, load=load0, out=reg0Out);
    Register(in=in, load=load1, out=reg1Out);
    Register(in=in, load=load2, out=reg2Out);
    Register(in=in, load=load3, out=reg3Out);
    Register(in=in, load=load4, out=reg4Out);
    Register(in=in, load=load5, out=reg5Out);
    Register(in=in, load=load6, out=reg6Out);
    Register(in=in, load=load7, out=reg7Out);

    // Output selection
    Mux8Way16(a=reg0Out, b=reg1Out, c=reg2Out, d=reg3Out, 
              e=reg4Out, f=reg5Out, g=reg6Out, h=reg7Out, 
              sel=address, out=out);
}