// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */


CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // Step 1: Register to hold the current value
    Register(in=outM, load=true, out=out, out=outR);

    // Step 2: Increment the current value
    Inc16(in=outR, out=outRI);

    // Step 3: Mux8Way16 to handle reset, load, and increment logic
    Mux8Way16(
        a=outR,       // Keep current value
        b=outRI,      // Incremented value
        c=in,         // Load input value (path 1)
        d=in,         // Load input value (path 2, unused but needed for Mux8Way16)
        e=false,      // Reset to 0 (path 1, unused but needed for Mux8Way16)
        f=false,      // Reset to 0 (path 2, unused but needed for Mux8Way16)
        g=false,      // Reset to 0 (path 3, unused but needed for Mux8Way16)
        h=false,      // Reset to 0 (path 4, unused but needed for Mux8Way16)
        sel[2]=reset, // Highest priority: Reset
        sel[1]=load,  // Next priority: Load
        sel[0]=inc,   // Lowest priority: Increment
        out=outM      // Final value to register
    );
}
